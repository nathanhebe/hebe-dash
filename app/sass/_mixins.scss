/*
===============================
    Mixins
===============================
*/

/* Transform Mixin to be used with other vals */
@mixin transform_($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    -o-transform: $transforms;
    transform: $transforms;
}

/* Scale mixin */
@mixin scale($scale) {
    @include transform_(scale($scale));
}

/* Border Radius mixin */
/*@mixin borderRadius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}*/

/* Box Shadow Mixin */
@mixin box-shadow($horizontal: 0px, $vertical: 1px, $blur: 2px, $color: #CCC) {
    -webkit-box-shadow: $horizontal $vertical $blur $color;
    -moz-box-shadow: $horizontal $vertical $blur $color;
    box-shadow: $horizontal $vertical $blur $color;
}


/* CSS3 Filter Mixin */
@mixin filter($filter-type,$filter-amount) {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    -o-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
}

/* Transition Mixin */
/*@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}*/

@mixin animate($property, $duration, $easing) {
    @include transition-property($property);
    @include transition-duration($duration);
    @include transition-timing-function($easing);
}

@mixin cf {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

//http://thesassway.com/intermediate/mixins-for-semi-transparent-colors
//http://codepen.io/cballenar/pen/tdznk
@mixin alpha-me($var1, $var2, $var3: null, $var4: null) {
    // Set variables for global use
    $property: $var1;
    $attributes: null;
    $color: null;
    $color-bg: null;

    // Check if $var2 is a color
    @if ( type-of($var2) == color ) {
        // Set default background if not specified
        @if not $var3 {
            $var3: #FFFFFF;
        }
        // Update variables
        $color: $var2;
        $color-bg: $var3;


        // Otherwise it should be the attributes
    }
    @else if ( type-of($var2) != color ) {
        // Set default background if not specified
        @if not $var4 {
            $var4: #FFFFFF;
        }
        // Update variables
        $attributes: $var2;
        $color: $var3;
        $color-bg: $var4;

    }
    // Extract alpha channel from color
    $percent: alpha($color) * 100%;

    // Make color opaque
    $opaque: opacify($color, 1);

    // Blend color with background.
    $color-solid: mix($opaque, $color-bg, $percent);

    // Return built style with solid color and transparent color
    #{$property}: #{$attributes} $color-solid;
    #{$property}: #{$attributes} $color;
}

@mixin center($axis: "both") {
    position: absolute;

    @if $axis == "y" {
        top: 50%;
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    @if $axis == "x" {
        left: 50%;
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%);
    }

    @if $axis == "both" {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}
